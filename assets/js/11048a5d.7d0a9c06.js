"use strict";(self.webpackChunkredstone_docs=self.webpackChunkredstone_docs||[]).push([[595],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(h,s(s({ref:t},l),{},{components:n})):a.createElement(h,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var d=2;d<o;d++)s[d]=n[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6927:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1,sidebar_label:"\u2699\ufe0f Core (on-demand feeds)"},s="\u2699\ufe0f Core Model",i={unversionedId:"smart-contract-devs/get-started/redstone-core",id:"smart-contract-devs/get-started/redstone-core",title:"\u2699\ufe0f Core Model",description:"Fetching prices on-demand",source:"@site/docs/smart-contract-devs/get-started/redstone-core.md",sourceDirName:"smart-contract-devs/get-started",slug:"/smart-contract-devs/get-started/redstone-core",permalink:"/docs/smart-contract-devs/get-started/redstone-core",draft:!1,editUrl:"https://github.com/redstone-finance/redstone-docs/tree/main/docs/smart-contract-devs/get-started/redstone-core.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"\u2699\ufe0f Core (on-demand feeds)"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\ude80 Get started",permalink:"/docs/category/-get-started"},next:{title:"\ud83c\udfdb Classic (push model)",permalink:"/docs/smart-contract-devs/get-started/redstone-classic"}},c={},d=[{value:"Fetching prices on-demand",id:"fetching-prices-on-demand",level:2},{value:"Installation",id:"installation",level:2},{value:"Hardhat",id:"hardhat",level:3},{value:"Foundry",id:"foundry",level:3},{value:"Usage",id:"usage",level:2},{value:"1. Adjust your smart contracts",id:"1-adjust-your-smart-contracts",level:3},{value:"2. Adjust Javascript code of your dApp",id:"2-adjust-javascript-code-of-your-dapp",level:3},{value:"Contract object wrapping",id:"contract-object-wrapping",level:4},{value:"Testing",id:"testing",level:4},{value:"Hardhat",id:"hardhat-1",level:5},{value:"Foundry",id:"foundry-1",level:5},{value:"Working demo",id:"working-demo",level:2}],l={toc:d};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\ufe0f-core-model"},"\u2699\ufe0f Core Model"),(0,r.kt)("h2",{id:"fetching-prices-on-demand"},"Fetching prices on-demand"),(0,r.kt)("p",null,"This is our basic operating model when the data is automatically appended to user transaction."),(0,r.kt)("admonition",{title:"In Prod",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"It is the most mature way to use RedStone, battle tested in production, protecting ~$20M for ",(0,r.kt)("a",{parentName:"p",href:"https://deltaprime.io/"},"DeltaPrime")," protocol where the price feeds were injected\nto ",(0,r.kt)("a",{parentName:"p",href:"https://dune.com/hatskier/redstone"},"~25K transactions"),".")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@redstone-finance/evm-connector"},"@redstone-finance/evm-connector")," from NPM registry"),(0,r.kt)("h3",{id:"hardhat"},"Hardhat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Using yarn\nyarn add @redstone-finance/evm-connector\n\n# Using NPM\nnpm install @redstone-finance/evm-connector\n")),(0,r.kt)("h3",{id:"foundry"},"Foundry"),(0,r.kt)("p",null,"Foundry installs dependencies using git submodules. Thus additional steps are needed to ",(0,r.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/projects/dependencies"},"install dependencies"),"."),(0,r.kt)("p",null,"In foundry project:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install ",(0,r.kt)("inlineCode",{parentName:"li"},"@redstone-finance/evm-connector")," - it will install current code from main branch")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"forge install redstone-finance/redstone-oracles-monorepo\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Install ",(0,r.kt)("inlineCode",{parentName:"li"},"@OpenZeppelin")," contracts (dependency of ",(0,r.kt)("inlineCode",{parentName:"li"},"@redstone-finance/evm-connector"),") - it will install current code from main branch")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"forge install OpenZeppelin/openzeppelin-contracts\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Add libraries to ",(0,r.kt)("inlineCode",{parentName:"li"},"remappings.txt"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo "@redstone-finance/evm-connector/dist/contracts/=lib/redstone-oracles-monorepo/packages/evm-connector/contracts/\n@openzeppelin/contracts=lib/openzeppelin-contracts/contracts/" >> remappings.txt\n')),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("admonition",{title:"Requirements",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"TLDR; You need to do 2 things:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#1-adjust-your-smart-contracts"},"Adjust your smart contracts")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#2-adjust-javascript-code-of-your-dapp"},"Adjust Javascript code of your dApp")," (",(0,r.kt)("strong",{parentName:"li"},"it is required"),", otherwise you will get smart contract errors)"))),(0,r.kt)("h3",{id:"1-adjust-your-smart-contracts"},"1. Adjust your smart contracts"),(0,r.kt)("p",null,"You need to apply a minimum change to the source code to enable smart contract to access data. Your contract needs to extend one of our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/redstone-finance/redstone-oracles-monorepo/tree/main/packages/evm-connector/contracts/data-services"},"base contracts"),", depending on which data service are you going to use. ",(0,r.kt)("a",{parentName:"p",href:"https://app.redstone.finance/#/app/data-services"},"Here")," you could find available data services with the list of supported assets."),(0,r.kt)("p",null,"We strongly recommend having some upgradability mechanism for your contracts (it can be based on multisig, DAO, or anything else). This way, you can quickly switch to the latest trusted data providers in case of changes or problems with the current providers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import "@redstone-finance/evm-connector/contracts/data-services/MainDemoConsumerBase.sol";\n\ncontract YourContractName is MainDemoConsumerBase {\n  ...\n}\n')),(0,r.kt)("p",null,"\ud83d\udca1 Note: You can also override the following functions (do it at your own risk):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isTimestampValid(uint256 receivedTimestamp) returns (bool)")," - to enable custom logic of timestamp validation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"aggregateValues(uint256[] memory values) returns (uint256)")," - to enable custom logic of aggregating values from different providers (by default this function takes the median value)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getAuthorisedSignerIndex(address _signerAddress) returns (uint256)")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"getUniqueSignersThreshold() returns (unt256)")," functions - to enable custom logic of signers authorisation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"getDataServiceId() returns (string memory)")," - to return custom dataServiceId ")),(0,r.kt)("p",null,"After applying the mentioned change you will be able to access the data calling the local ",(0,r.kt)("inlineCode",{parentName:"p"},"getOracleNumericValueFromTxMsg")," function. You should pass the data feed id converted to ",(0,r.kt)("inlineCode",{parentName:"p"},"bytes32"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Getting a single value\nuint256 ethPrice = getOracleNumericValueFromTxMsg(bytes32("ETH"));\n\n// Getting several values\nbytes32[] memory dataFeedIds = new bytes32[](2);\ndataFeedIds[0] = bytes32("ETH");\ndataFeedIds[1] = bytes32("BTC");\nuint256[] memory values = getOracleNumericValuesFromTxMsg(dataFeedIds);\nuint256 ethPrice = values[0];\nuint256 btcPrice = values[1];\n')),(0,r.kt)("p",null,"You can see all available data feeds ",(0,r.kt)("a",{parentName:"p",href:"https://app.redstone.finance"},"in our web app.")),(0,r.kt)("admonition",{title:"Don't use remix",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Please don't use Remix to test RedStone oracles, as Remix does not support modifying transactions in the way that the evm-connector does")),(0,r.kt)("h3",{id:"2-adjust-javascript-code-of-your-dapp"},"2. Adjust Javascript code of your dApp"),(0,r.kt)("p",null,"You should also update the code responsible for submitting transactions. If you're using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ethers-io/ethers.js/"},"ethers.js"),", we've prepared a dedicated library to make the transition seamless."),(0,r.kt)("h4",{id:"contract-object-wrapping"},"Contract object wrapping"),(0,r.kt)("p",null,"First, you need to import the wrapper code to your project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// Typescript\nimport { WrapperBuilder } from "@redstone-finance/evm-connector";\n\n// Javascript\nconst { WrapperBuilder } = require("@redstone-finance/evm-connector");\n')),(0,r.kt)("p",null,"Then you can wrap your ethers contract pointing to the selected ",(0,r.kt)("a",{parentName:"p",href:"https://app.redstone.finance/#/app/data-services"},"RedStone data service id.")," You can (optionally) specify a number of unique signers, data feed identifiers, and  URLs for the redstone cache nodes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const yourEthersContract = new ethers.Contract(address, abi, provider);\n\nconst wrappedContract = WrapperBuilder.wrap(contract).usingDataService(\n  {\n    dataFeeds: ["ETH", "BTC"],\n  },\n);\n')),(0,r.kt)("p",null,"Now you can access any of the contract's methods in exactly the same way as interacting with the ethers-js code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"wrappedContract.executeYourMethod();\n")),(0,r.kt)("h4",{id:"testing"},"Testing"),(0,r.kt)("h5",{id:"hardhat-1"},"Hardhat"),(0,r.kt)("p",null,"If you'd like to use the wrapper in a test context, we recommend using a mock wrapper so that you can easily override the oracle values to test different scenarios. To use the mock wrapper just use the ",(0,r.kt)("inlineCode",{parentName:"p"},"usingMockData(signedDataPackages)")," function instead of the ",(0,r.kt)("inlineCode",{parentName:"p"},"usingDataService")," function. You can see examples of the mock wrapper usage ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/redstone-finance/redstone-oracles-monorepo/tree/main/packages/evm-connector/test/mock-wrapper"},"here.")),(0,r.kt)("h5",{id:"foundry-1"},"Foundry"),(0,r.kt)("p",null,"To use Redstone Oracles with Foundry in test context, we recommend using foundry ",(0,r.kt)("inlineCode",{parentName:"p"},"vm.ffi")," function to generate mocked dataPackages.\nWe have prepared ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/redstone-finance/minimal-foundry-repo"},"repository")," showing how we can integrate foundry with redstone."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/redstone-finance/minimal-foundry-repo/blob/main/test/Counter.t.sol"},"consuming redstone payload in foundry contract")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/redstone-finance/minimal-foundry-repo/blob/main/getRedstonePayload.js"},"generating mock redstone payload"))),(0,r.kt)("h2",{id:"working-demo"},"Working demo"),(0,r.kt)("p",null,"You can see examples of the ",(0,r.kt)("inlineCode",{parentName:"p"},"@redstone-finance/evm-connector")," usage in our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/redstone-finance/redstone-evm-examples"},"dedicated repo with examples"),"."))}p.isMDXComponent=!0}}]);